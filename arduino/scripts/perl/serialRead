#!/usr/bin/perl

STDOUT->autoflush(1);

use Device::SerialPort;
use strict;
use warnings;
use Scalar::Util qw(looks_like_number);

my $port = Device::SerialPort->new("/dev/cu.usbmodem1421");
$port->databits(8);
$port->baudrate(9600);
$port->parity("none");
# $port->stopbits(1);
$port->read_char_time(0);  # don't wait for each character
$port->read_const_time(1000); # .1 second per unfulfilled "read" call

my $number_of_chars_to_read = 4;

my $user = 'demo';
my $urlBase = 'http://api.bravegloves.dev/';
my $newSessionCommand = 'curl -X POST ' . $urlBase . 'sessions/new/';

system($newSessionCommand.$user);
print "\n\r";

my $active = 0;
my $time = 0;
my $timestampStart = 0;
my $timestampStop = 0;

while (1) {
  my $code = $port->read($number_of_chars_to_read);

  if (looks_like_number($code) && $code ne "") {
    my ($number) = $code =~ /\d+/g;
    if (length $number eq 1) {
      if ($number >= 1 && $number < 10) {

        if (!$active) {
          startTimer();
          startActiveSession();
        }

        $active = 1;

      } else {

        my $diff = time() - $timestampStart;

        if ($diff > 5 && $active) {
          stopTimer();
          stopActiveSession();

          $active = 0;
        }
      }
    }
  }
}

sub parse {
    return sprintf '%.2f', $_[0];
}

sub startTimer {
  $timestampStart = time();
  # print "Started at $timestampStart";
  print "\n";
}

sub stopTimer {
  $timestampStop = time();
  # print "Stopped at $timestampStop";
  print "\n";
}

sub startActiveSession {
  my $startSessionTime = 'curl -X POST ' . $urlBase . 'sessions/times/' . $user . '/start';
  system($startSessionTime);
  print "\n";
}

sub stopActiveSession {
  my $stopSessionTime = 'curl -X POST ' . $urlBase . 'sessions/times/' . $user . '/stop';
  system($stopSessionTime);
  print "\n";
}
